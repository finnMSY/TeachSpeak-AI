{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GGPC\\\\OneDrive\\\\Documents\\\\GitHub\\\\TeachSpeak-AI\\\\teach-speak-ai\\\\src\\\\components\\\\home-page-recording-menu\\\\recording-menu.jsx\",\n  _s = $RefreshSig$();\nimport RootContext from \"../../providers/root\";\nimport './recording-menu.css';\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from \"axios\";\nimport ClassroomIMG from \"./classroom-stock.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecordingMenu({\n  setMenuSlide\n}) {\n  _s();\n  const {\n    setCurrentPage\n  } = useContext(RootContext);\n  const [currentlyRecording, isCurrentlyRecording] = useState(false);\n  const [driversList, setDriversList] = useState([]);\n  const [defaultDriver, setDefaultDriver] = useState({});\n  const startRecording = async () => {\n    try {\n      isCurrentlyRecording(true);\n      const response = await axios.get(\"http://localhost:5000/api/start_recording\");\n      console.log(response.data);\n    } catch (error) {\n      console.error(\"Error starting recording:\", error);\n      isCurrentlyRecording(false);\n    }\n  };\n  const stopRecording = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/stop_recording\");\n      console.log(response.data); // Assuming the response contains the path to the saved audio file\n      isCurrentlyRecording(false);\n      console.log(response);\n    } catch (error) {\n      console.error(\"Error stopping recording:\", error);\n      isCurrentlyRecording(true);\n    }\n  };\n  const getAudioDrivers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/get_audio_drivers\");\n      const driverList = response.data[0];\n      const defaultDriver = response.data[1];\n      setDriversList(driverList);\n      setDefaultDriver(defaultDriver);\n    } catch (error) {\n      console.error(\"Error, couldn't retrieve drivers:\", error);\n    }\n  };\n  const submit = async () => {\n    setMenuSlide(\"loading\");\n    try {\n      await axios.get(\"http://localhost:5000/api/submit-audio\");\n    } catch (error) {\n      console.error(\"lol:\", error);\n    }\n    setMenuSlide(\"results\");\n  };\n  const setCurrentDriver = async driver => {\n    try {\n      const response = await axios.post(`http://localhost:5000/api/set_driver/${driver}`, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n    } catch (error) {\n      console.error(\"Error, couldn't set driver:\", error);\n    }\n  };\n  useEffect(() => {\n    getAudioDrivers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"main\",\n    style: {\n      backgroundImage: `url(${ClassroomIMG})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: `gg-record record-icon`,\n          style: {\n            color: currentlyRecording ? '#F61B1C' : '#0094D5'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center',\n            opacity: currentlyRecording ? '1' : '0',\n            color: '#F61B1C',\n            fontWeight: 'bold'\n          },\n          children: \"RECORDING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setCurrentDriver(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: defaultDriver.name,\n              children: defaultDriver.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), driversList.map((option, index) => option.name !== defaultDriver.name && /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.name,\n              children: option.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: '#2FB362'\n            },\n            className: \"start\",\n            onClick: startRecording,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: '#E53430'\n            },\n            className: \"stop\",\n            onClick: stopRecording,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: '#0094D5'\n            },\n            onClick: submit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(RecordingMenu, \"nh1mbeq6J+x0pUgb1BOXnzt7Y8Q=\");\n_c = RecordingMenu;\nexport default RecordingMenu;\nvar _c;\n$RefreshReg$(_c, \"RecordingMenu\");","map":{"version":3,"names":["RootContext","React","useEffect","useState","useContext","axios","ClassroomIMG","jsxDEV","_jsxDEV","RecordingMenu","setMenuSlide","_s","setCurrentPage","currentlyRecording","isCurrentlyRecording","driversList","setDriversList","defaultDriver","setDefaultDriver","startRecording","response","get","console","log","data","error","stopRecording","getAudioDrivers","driverList","submit","setCurrentDriver","driver","post","headers","class","style","backgroundImage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","color","textAlign","opacity","fontWeight","onChange","e","target","value","name","map","option","index","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/GGPC/OneDrive/Documents/GitHub/TeachSpeak-AI/teach-speak-ai/src/components/home-page-recording-menu/recording-menu.jsx"],"sourcesContent":["import RootContext from \"../../providers/root\";\r\nimport './recording-menu.css';\r\nimport React, { useEffect, useState, useContext} from 'react';\r\nimport axios from \"axios\";\r\nimport ClassroomIMG from \"./classroom-stock.jpg\"\r\n\r\nfunction RecordingMenu({setMenuSlide}) {\r\n    const {\r\n        setCurrentPage\r\n    } = useContext(RootContext);\r\n\r\n    const [currentlyRecording, isCurrentlyRecording] = useState(false);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [defaultDriver, setDefaultDriver] = useState({});\r\n\r\n    const startRecording = async () => {\r\n        try {\r\n            isCurrentlyRecording(true)\r\n            const response = await axios.get(\"http://localhost:5000/api/start_recording\");\r\n            console.log(response.data)\r\n        } catch (error) {\r\n            console.error(\"Error starting recording:\", error);\r\n            isCurrentlyRecording(false)\r\n        }\r\n    }\r\n\r\n    const stopRecording = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:5000/api/stop_recording\");\r\n            console.log(response.data); // Assuming the response contains the path to the saved audio file\r\n            isCurrentlyRecording(false)\r\n            console.log(response)\r\n        } catch (error) {\r\n            console.error(\"Error stopping recording:\", error);\r\n            isCurrentlyRecording(true)\r\n        }\r\n    }\r\n\r\n    const getAudioDrivers = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:5000/api/get_audio_drivers\");\r\n            const driverList = response.data[0];\r\n            const defaultDriver = response.data[1];\r\n            setDriversList(driverList);\r\n            setDefaultDriver(defaultDriver);\r\n        } catch (error) {\r\n            console.error(\"Error, couldn't retrieve drivers:\", error);\r\n        }\r\n    }\r\n\r\n    const submit = async () => {\r\n        setMenuSlide(\"loading\")\r\n        try {\r\n            await axios.get(\"http://localhost:5000/api/submit-audio\");\r\n\r\n        } catch (error) {\r\n            console.error(\"lol:\", error);\r\n        }\r\n        setMenuSlide(\"results\")\r\n    }\r\n\r\n    const setCurrentDriver = async (driver) => {\r\n        try {\r\n            const response = await axios.post(\r\n                `http://localhost:5000/api/set_driver/${driver}`,\r\n                {\r\n                    headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                    },\r\n                }\r\n            );\r\n        } catch (error) {\r\n            console.error(\"Error, couldn't set driver:\", error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAudioDrivers();  \r\n    }, []);\r\n    \r\n    return (\r\n        <div class=\"main\" style={{ backgroundImage: `url(${ClassroomIMG})` }}>\r\n            <div className='overlay'></div>\r\n            <div className='container'>\r\n                <div className='center'>\r\n                    <i className={`gg-record record-icon`} style={{ color: currentlyRecording ? '#F61B1C' : '#0094D5' }}></i> \r\n                    <p style={{textAlign: 'center', opacity: currentlyRecording ? '1' : '0', color: '#F61B1C', fontWeight: 'bold'}}>RECORDING</p>\r\n                    <div className='button-container'>\r\n                        <select onChange={(e) => setCurrentDriver(e.target.value)}>\r\n                            <option value={defaultDriver.name}>{defaultDriver.name}</option>\r\n                            {driversList.map((option, index) => (\r\n                                option.name !== defaultDriver.name && (\r\n                                    <option key={index} value={option.name}>{option.name}</option>\r\n                                )\r\n                            ))}\r\n                        </select>\r\n                        <button style={{backgroundColor: '#2FB362'}} className='start' onClick={startRecording}>Start</button>\r\n                        <button style={{backgroundColor: '#E53430'}} className='stop' onClick={stopRecording}>Stop</button>\r\n                        <button style={{backgroundColor: '#0094D5'}} onClick={submit}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecordingMenu;\r\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,sBAAsB;AAC9C,OAAO,sBAAsB;AAC7B,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAO,OAAO;AAC7D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,aAAaA,CAAC;EAACC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM;IACFC;EACJ,CAAC,GAAGR,UAAU,CAACJ,WAAW,CAAC;EAE3B,MAAM,CAACa,kBAAkB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAClE,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACAL,oBAAoB,CAAC,IAAI,CAAC;MAC1B,MAAMM,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,2CAA2C,CAAC;MAC7EC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDX,oBAAoB,CAAC,KAAK,CAAC;IAC/B;EACJ,CAAC;EAED,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMN,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,0CAA0C,CAAC;MAC5EC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAC5BV,oBAAoB,CAAC,KAAK,CAAC;MAC3BQ,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACzB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDX,oBAAoB,CAAC,IAAI,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMP,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,6CAA6C,CAAC;MAC/E,MAAMO,UAAU,GAAGR,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MACnC,MAAMP,aAAa,GAAGG,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MACtCR,cAAc,CAACY,UAAU,CAAC;MAC1BV,gBAAgB,CAACD,aAAa,CAAC;IACnC,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC7D;EACJ,CAAC;EAED,MAAMI,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvBnB,YAAY,CAAC,SAAS,CAAC;IACvB,IAAI;MACA,MAAML,KAAK,CAACgB,GAAG,CAAC,wCAAwC,CAAC;IAE7D,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,MAAM,EAAEA,KAAK,CAAC;IAChC;IACAf,YAAY,CAAC,SAAS,CAAC;EAC3B,CAAC;EAED,MAAMoB,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACvC,IAAI;MACA,MAAMX,QAAQ,GAAG,MAAMf,KAAK,CAAC2B,IAAI,CAC5B,wCAAuCD,MAAO,EAAC,EAChD;QACIE,OAAO,EAAE;UACT,cAAc,EAAE;QAChB;MACJ,CACJ,CAAC;IACL,CAAC,CAAC,OAAOR,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACZyB,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACInB,OAAA;IAAK0B,KAAK,EAAC,MAAM;IAACC,KAAK,EAAE;MAAEC,eAAe,EAAG,OAAM9B,YAAa;IAAG,CAAE;IAAA+B,QAAA,gBACjE7B,OAAA;MAAK8B,SAAS,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC/BlC,OAAA;MAAK8B,SAAS,EAAC,WAAW;MAAAD,QAAA,eACtB7B,OAAA;QAAK8B,SAAS,EAAC,QAAQ;QAAAD,QAAA,gBACnB7B,OAAA;UAAG8B,SAAS,EAAG,uBAAuB;UAACH,KAAK,EAAE;YAAEQ,KAAK,EAAE9B,kBAAkB,GAAG,SAAS,GAAG;UAAU;QAAE;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzGlC,OAAA;UAAG2B,KAAK,EAAE;YAACS,SAAS,EAAE,QAAQ;YAAEC,OAAO,EAAEhC,kBAAkB,GAAG,GAAG,GAAG,GAAG;YAAE8B,KAAK,EAAE,SAAS;YAAEG,UAAU,EAAE;UAAM,CAAE;UAAAT,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC7HlC,OAAA;UAAK8B,SAAS,EAAC,kBAAkB;UAAAD,QAAA,gBAC7B7B,OAAA;YAAQuC,QAAQ,EAAGC,CAAC,IAAKlB,gBAAgB,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;YAAAb,QAAA,gBACtD7B,OAAA;cAAQ0C,KAAK,EAAEjC,aAAa,CAACkC,IAAK;cAAAd,QAAA,EAAEpB,aAAa,CAACkC;YAAI;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,EAC/D3B,WAAW,CAACqC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAC3BD,MAAM,CAACF,IAAI,KAAKlC,aAAa,CAACkC,IAAI,iBAC9B3C,OAAA;cAAoB0C,KAAK,EAAEG,MAAM,CAACF,IAAK;cAAAd,QAAA,EAAEgB,MAAM,CAACF;YAAI,GAAvCG,KAAK;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA2C,CAEpE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACTlC,OAAA;YAAQ2B,KAAK,EAAE;cAACoB,eAAe,EAAE;YAAS,CAAE;YAACjB,SAAS,EAAC,OAAO;YAACkB,OAAO,EAAErC,cAAe;YAAAkB,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtGlC,OAAA;YAAQ2B,KAAK,EAAE;cAACoB,eAAe,EAAE;YAAS,CAAE;YAACjB,SAAS,EAAC,MAAM;YAACkB,OAAO,EAAE9B,aAAc;YAAAW,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnGlC,OAAA;YAAQ2B,KAAK,EAAE;cAACoB,eAAe,EAAE;YAAS,CAAE;YAACC,OAAO,EAAE3B,MAAO;YAAAQ,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC/B,EAAA,CAlGQF,aAAa;AAAAgD,EAAA,GAAbhD,aAAa;AAoGtB,eAAeA,aAAa;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}