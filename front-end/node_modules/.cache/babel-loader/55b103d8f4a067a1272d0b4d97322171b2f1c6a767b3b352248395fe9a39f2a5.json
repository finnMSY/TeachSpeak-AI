{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GGPC\\\\OneDrive\\\\Documents\\\\GitHub\\\\TeachSpeak-AI\\\\teach-speak-ai\\\\src\\\\components\\\\home-page-progress\\\\progress.jsx\",\n  _s = $RefreshSig$();\nimport RootContext from \"../../providers/root\";\nimport './progress.css';\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Progress() {\n  _s();\n  const {\n    setCurrentPage\n  } = useContext(RootContext);\n  const [currentlyRecording, isCurrentlyRecording] = useState(false);\n  const [driversList, setDriversList] = useState([]);\n  const [defaultDriver, setDefaultDriver] = useState({});\n  const startRecording = async () => {\n    try {\n      isCurrentlyRecording(true);\n      const response = await axios.get(\"http://localhost:5000/api/start_recording\");\n      console.log(response.data);\n    } catch (error) {\n      console.error(\"Error starting recording:\", error);\n      isCurrentlyRecording(false);\n    }\n  };\n  const stopRecording = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/stop_recording\");\n      console.log(response.data); // Assuming the response contains the path to the saved audio file\n      isCurrentlyRecording(false);\n    } catch (error) {\n      console.error(\"Error stopping recording:\", error);\n      isCurrentlyRecording(true);\n    }\n  };\n  const getAudioDrivers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/get_audio_drivers\");\n      const driverList = response.data[0];\n      const defaultDriver = response.data[1];\n      setDriversList(driverList);\n      setDefaultDriver(defaultDriver);\n    } catch (error) {\n      console.error(\"Error, couldn't retrieve drivers:\", error);\n    }\n  };\n  const setCurrentDriver = async driver => {\n    try {\n      const response = await axios.post(`http://localhost:5000/api/set_driver/${driver}`, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n    } catch (error) {\n      console.error(\"Error, couldn't set driver:\", error);\n    }\n  };\n  useEffect(() => {\n    getAudioDrivers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: `gg-record record-icon`,\n        style: {\n          color: currentlyRecording ? '#F61B1C' : '#0094D5'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          opacity: currentlyRecording ? '1' : '0',\n          color: '#F61B1C',\n          fontWeight: 'bold'\n        },\n        children: \"RECORDING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: '#2FB362'\n          },\n          className: \"start\",\n          onClick: startRecording,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: '#E53430'\n          },\n          className: \"stop\",\n          onClick: stopRecording,\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: '#0094D5'\n          },\n          onClick: () => setCurrentPage(\"loading\"),\n          children: \"Next Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(Progress, \"nh1mbeq6J+x0pUgb1BOXnzt7Y8Q=\");\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["RootContext","React","useEffect","useState","useContext","axios","jsxDEV","_jsxDEV","Progress","_s","setCurrentPage","currentlyRecording","isCurrentlyRecording","driversList","setDriversList","defaultDriver","setDefaultDriver","startRecording","response","get","console","log","data","error","stopRecording","getAudioDrivers","driverList","setCurrentDriver","driver","post","headers","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","opacity","fontWeight","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/GGPC/OneDrive/Documents/GitHub/TeachSpeak-AI/teach-speak-ai/src/components/home-page-progress/progress.jsx"],"sourcesContent":["import RootContext from \"../../providers/root\";\r\nimport './progress.css';\r\nimport React, { useEffect, useState, useContext} from 'react';\r\nimport axios from \"axios\";\r\n\r\nfunction Progress() {\r\n    const {\r\n        setCurrentPage\r\n    } = useContext(RootContext);\r\n\r\n    const [currentlyRecording, isCurrentlyRecording] = useState(false);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [defaultDriver, setDefaultDriver] = useState({});\r\n\r\n    const startRecording = async () => {\r\n        try {\r\n            isCurrentlyRecording(true)\r\n            const response = await axios.get(\"http://localhost:5000/api/start_recording\");\r\n            console.log(response.data)\r\n        } catch (error) {\r\n            console.error(\"Error starting recording:\", error);\r\n            isCurrentlyRecording(false)\r\n        }\r\n    }\r\n\r\n    const stopRecording = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:5000/api/stop_recording\");\r\n            console.log(response.data); // Assuming the response contains the path to the saved audio file\r\n            isCurrentlyRecording(false)\r\n        } catch (error) {\r\n            console.error(\"Error stopping recording:\", error);\r\n            isCurrentlyRecording(true)\r\n        }\r\n    }\r\n\r\n    const getAudioDrivers = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:5000/api/get_audio_drivers\");\r\n            const driverList = response.data[0];\r\n            const defaultDriver = response.data[1];\r\n            setDriversList(driverList);\r\n            setDefaultDriver(defaultDriver);\r\n        } catch (error) {\r\n            console.error(\"Error, couldn't retrieve drivers:\", error);\r\n        }\r\n    }\r\n\r\n    const setCurrentDriver = async (driver) => {\r\n        try {\r\n            const response = await axios.post(\r\n                `http://localhost:5000/api/set_driver/${driver}`,\r\n                {\r\n                    headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                    },\r\n                }\r\n            );\r\n        } catch (error) {\r\n            console.error(\"Error, couldn't set driver:\", error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAudioDrivers();  \r\n    }, []);\r\n    \r\n    return (\r\n        <div className='container'>\r\n            <div className='center'>\r\n                <i className={`gg-record record-icon`} style={{ color: currentlyRecording ? '#F61B1C' : '#0094D5' }}></i> \r\n                <p style={{textAlign: 'center', opacity: currentlyRecording ? '1' : '0', color: '#F61B1C', fontWeight: 'bold'}}>RECORDING</p>\r\n                <div className='button-container'>\r\n                    <h1>Progress</h1>\r\n                    <button style={{backgroundColor: '#2FB362'}} className='start' onClick={startRecording}>Start</button>\r\n                    <button style={{backgroundColor: '#E53430'}} className='stop' onClick={stopRecording}>Stop</button>\r\n                    <button style={{backgroundColor: '#0094D5'}} onClick={() => setCurrentPage(\"loading\")}>Next Page</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Progress;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}