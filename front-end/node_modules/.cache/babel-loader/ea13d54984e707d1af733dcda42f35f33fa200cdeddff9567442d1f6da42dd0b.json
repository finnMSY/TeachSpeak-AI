{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GGPC\\\\OneDrive\\\\Documents\\\\GitHub\\\\TeachSpeak-AI\\\\teach-speak-ai\\\\src\\\\pages\\\\home-page\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './home-page.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [driversList, setDriversList] = useState([]);\n  const [defaultDriver, setDefaultDriver] = useState({});\n  const startRecording = async () => {\n    try {\n      setRecording('loading');\n      const response = await axios.get(\"http://localhost:5000/api/start_recording\");\n      console.log(response.data);\n      setRecording(true);\n    } catch (error) {\n      console.error(\"Error starting recording:\", error);\n      setRecording(false);\n    }\n  };\n  const stopRecording = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/stop_recording\");\n      console.log(response.data); // Assuming the response contains the path to the saved audio file\n      setRecording(\"saved\");\n      setRecording(false);\n    } catch (error) {\n      console.error(\"Error stopping recording:\", error);\n    }\n  };\n  const getAudioDrivers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/get_audio_drivers\");\n      const driverList = response.data[0];\n      const defaultDriver = response.data[1];\n      setDriversList(driverList);\n      setDefaultDriver(defaultDriver);\n    } catch (error) {\n      console.error(\"Error, couldn't retrieve drivers:\", error);\n    }\n  };\n  useEffect(() => {\n    getAudioDrivers();\n    console.log(defaultDriver);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recording Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        selected: true,\n        value: defaultDriver.name,\n        children: defaultDriver.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), driversList.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.name,\n        children: option.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), recording === 'loading' && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Recording...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"rlPtKR6bneTiEhMYGEWq5DZML6I=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","HomePage","_s","recording","setRecording","driversList","setDriversList","defaultDriver","setDefaultDriver","startRecording","response","get","console","log","data","error","stopRecording","getAudioDrivers","driverList","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","value","name","map","option","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/GGPC/OneDrive/Documents/GitHub/TeachSpeak-AI/teach-speak-ai/src/pages/home-page/HomePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './home-page.css';\r\nimport axios from \"axios\";\r\n\r\nfunction HomePage() {\r\n    const [recording, setRecording] = useState(false);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [defaultDriver, setDefaultDriver] = useState({});\r\n\r\n    const startRecording = async () => {\r\n        try {\r\n            setRecording('loading');\r\n            const response = await axios.get(\"http://localhost:5000/api/start_recording\");\r\n            console.log(response.data)\r\n            setRecording(true);\r\n        } catch (error) {\r\n            console.error(\"Error starting recording:\", error);\r\n            setRecording(false);\r\n        }\r\n    }\r\n\r\n    const stopRecording = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:5000/api/stop_recording\");\r\n            console.log(response.data); // Assuming the response contains the path to the saved audio file\r\n            setRecording(\"saved\")\r\n            setRecording(false);\r\n        } catch (error) {\r\n            console.error(\"Error stopping recording:\", error);\r\n        }\r\n    }\r\n\r\n    const getAudioDrivers = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:5000/api/get_audio_drivers\");\r\n            const driverList = response.data[0];\r\n            const defaultDriver = response.data[1];\r\n            setDriversList(driverList);\r\n            setDefaultDriver(defaultDriver);\r\n        } catch (error) {\r\n            console.error(\"Error, couldn't retrieve drivers:\", error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAudioDrivers();  \r\n        console.log(defaultDriver)\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Recording Page</h1>\r\n            <select>\r\n                <option selected value={defaultDriver.name}>{defaultDriver.name}</option>\r\n                {driversList.map((option, index) => (\r\n                    <option key={index} value={option.name}>{option.name}</option>\r\n                ))}\r\n            </select>\r\n            <button onClick={startRecording}>Start</button>\r\n            <button onClick={stopRecording}>Stop</button>\r\n\r\n            {recording === 'loading' && \r\n                <p>Recording...</p>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}